openapi: 3.0.3
info:
  title: Mobile API
  version: "1.0.3"
  description: |
    Subset of the main API for mobile clients:
    registration, auth, viewing cars & categories,
    viewing hotel rooms & availability,
    and creating/canceling own bookings.

servers:
  - url: http://193.160.119.15:3000
    description: Local development server

tags:
  - name: Auth
    description: Registration and authentication
  - name: CarCategory
    description: View car categories
  - name: Car
    description: View cars
  - name: CarBooking
    description: Create and cancel your own car bookings
  - name: HotelRoom
    description: View hotel rooms and availability
  - name: HotelBooking
    description: Create, cancel, and (admin) approve/reject hotel bookings

paths:
  # --- Auth ---
  /api/auth/registration:
    post:
      tags: [Auth]
      summary: Request user registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: Registration request created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/auth/login:
    post:
      tags: [Auth]
      summary: Log in and receive token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/auth/logout:
    post:
      tags: [Auth]
      summary: Log out
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/auth/me:
    get:
      tags: [Auth]
      summary: Get current user profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # --- Car endpoints ---
  /api/car-categories:
    get:
      tags: [CarCategory]
      summary: List all car categories
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Array of car categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/cars:
    get:
      tags: [Car]
      summary: List all cars
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Array of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/cars/available:
    get:
      tags: [Car]
      summary: List cars available in a date range
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: date_start
          required: true
          schema:
            type: string
            format: date-time
          description: Booking start datetime
        - in: query
          name: date_expired
          required: true
          schema:
            type: string
            format: date-time
          description: Booking end datetime
      responses:
        '200':
          description: Array of available cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/car-bookings:
    post:
      tags: [CarBooking]
      summary: Create a new car booking
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCarBookingRequest'
      responses:
        '201':
          description: Booking created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/car-bookings/my/pending:
    get:
      tags: [CarBooking]
      summary: List your pending car bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of pending bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/car-bookings/my/active:
    get:
      tags: [CarBooking]
      summary: List your active car bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of active bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/car-bookings/my/history:
    get:
      tags: [CarBooking]
      summary: List your past car bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of historical bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/car-bookings/my/{id}/status:
    put:
      tags: [CarBooking]
      summary: Cancel your car booking
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Booking ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [canceled]
      responses:
        '200':
          description: Booking cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # --- Hotel endpoints ---
  /api/hotel/rooms:
    get:
      tags: [HotelRoom]
      summary: List all hotel rooms
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Array of hotel rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotelRoom'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/rooms/available:
    get:
      tags: [HotelRoom]
      summary: List available rooms in a date range
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: date_start
          required: true
          schema:
            type: string
            format: date-time
          description: Booking start datetime
        - in: query
          name: date_end
          required: true
          schema:
            type: string
            format: date-time
          description: Booking end datetime
      responses:
        '200':
          description: Array of available hotel rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotelRoom'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/bookings:
    post:
      tags: [HotelBooking]
      summary: Create a new hotel booking
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHotelBookingRequest'
      responses:
        '201':
          description: Booking created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/bookings/my/pending:
    get:
      tags: [HotelBooking]
      summary: List your pending hotel bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of pending hotel bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/bookings/my/active:
    get:
      tags: [HotelBooking]
      summary: List your active hotel bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of active hotel bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/bookings/my/history:
    get:
      tags: [HotelBooking]
      summary: List your past hotel bookings
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of historical hotel bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelBookingListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/hotel/bookings/my/{id}/status:
    put:
      tags: [HotelBooking]
      summary: Cancel your hotel booking
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Booking ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [canceled]
      responses:
        '200':
          description: Booking cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Missing or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    UserRegistrationRequest:
      type: object
      required:
        - login
        - password
        - surname
        - name
        - tab_num
      properties:
        login:
          type: string
        password:
          type: string
        surname:
          type: string
        name:
          type: string
        patronym:
          type: string
          nullable: true
        tab_num:
          type: string
        phone:
          type: string
          nullable: true

    UserRegistrationResponse:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        status:
          type: string
          enum: [pending]

    LoginRequest:
      type: object
      required: [login, password]
      properties:
        login:
          type: string
        password:
          type: string
        device:
          type: string
          nullable: true

    LoginResponse:
      type: object
      properties:
        token:
          type: string

    LogoutResponse:
      type: object
      properties:
        message:
          type: string

    UserProfileResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
            login:
              type: string
            tab_num:
             type: string
            surname:
              type: string
            name:
              type: string
            patronym:
              type: string
              nullable: true
            phone:
              type: string
              nullable: true
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
            permissions:
              type: array
              items:
                type: string

    CarCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Car:
      type: object
      properties:
        id:
          type: integer
        car_category_id:
          type: integer
        category_name:
          type: string
        model:
          type: string
        number:
          type: string

    CreateCarBookingRequest:
      type: object
      required:
        - car_id
        - phone_number
        - date_start
        - date_expired
      properties:
        car_id:
          type: integer
        phone_number:
          type: string
        purpose:
          type: string
          nullable: true
        route:
          type: string
          nullable: true
        date_start:
          type: string
          format: date-time
        date_expired:
          type: string
          format: date-time

    CarBooking:
      type: object
      properties:
        id:
          type: integer
        car_id:
          type: integer
        phone_number:
          type: string
        purpose:
          type: string
        route:
          type: string
        date_start:
          type: string
          format: date-time
        date_expired:
          type: string
          format: date-time
        status:
          type: string
        date_creation:
          type: string
          format: date-time
        model:
          type: string
        number:
          type: string
        category_name:
          type: string

    CarBookingListResponse:
      type: object
      properties:
        total:
          type: integer
        rows:
          type: array
          items:
            $ref: '#/components/schemas/CarBooking'

    HotelRoom:
      type: object
      properties:
        id:
          type: integer
        num:
          type: string
        data_status:
          type: string
        date_creation:
          type: string
          format: date-time

    CreateHotelBookingRequest:
      type: object
      required:
        - room_id
        - phone
        - date_start
        - date_end
      properties:
        room_id:
          type: integer
        phone:
          type: string
        purpose:
          type: string
          nullable: true
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time

    HotelBooking:
      type: object
      properties:
        id:
          type: integer
        room_id:
          type: integer
        phone:
          type: string
        purpose:
          type: string
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        status:
          type: string
        door_code:
          type: string
          nullable: true
        date_creation:
          type: string
          format: date-time
        room_num:
          type: string

    HotelBookingListResponse:
      type: object
      properties:
        total:
          type: integer
        rows:
          type: array
          items:
            $ref: '#/components/schemas/HotelBooking'

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
